// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/mather.proto

package mather

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// MathAddArgs are the arguments for an addition
type MathAddArgs struct {
	First                int64    `protobuf:"varint,1,opt,name=First,proto3" json:"First,omitempty"`
	Second               int64    `protobuf:"varint,2,opt,name=Second,proto3" json:"Second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MathAddArgs) Reset()         { *m = MathAddArgs{} }
func (m *MathAddArgs) String() string { return proto.CompactTextString(m) }
func (*MathAddArgs) ProtoMessage()    {}
func (*MathAddArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_a456687a9b7846aa, []int{0}
}

func (m *MathAddArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MathAddArgs.Unmarshal(m, b)
}
func (m *MathAddArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MathAddArgs.Marshal(b, m, deterministic)
}
func (m *MathAddArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MathAddArgs.Merge(m, src)
}
func (m *MathAddArgs) XXX_Size() int {
	return xxx_messageInfo_MathAddArgs.Size(m)
}
func (m *MathAddArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_MathAddArgs.DiscardUnknown(m)
}

var xxx_messageInfo_MathAddArgs proto.InternalMessageInfo

func (m *MathAddArgs) GetFirst() int64 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *MathAddArgs) GetSecond() int64 {
	if m != nil {
		return m.Second
	}
	return 0
}

// MathAddReply is the reply for an addition
type MathAddReply struct {
	Result               int64    `protobuf:"varint,3,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MathAddReply) Reset()         { *m = MathAddReply{} }
func (m *MathAddReply) String() string { return proto.CompactTextString(m) }
func (*MathAddReply) ProtoMessage()    {}
func (*MathAddReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a456687a9b7846aa, []int{1}
}

func (m *MathAddReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MathAddReply.Unmarshal(m, b)
}
func (m *MathAddReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MathAddReply.Marshal(b, m, deterministic)
}
func (m *MathAddReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MathAddReply.Merge(m, src)
}
func (m *MathAddReply) XXX_Size() int {
	return xxx_messageInfo_MathAddReply.Size(m)
}
func (m *MathAddReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MathAddReply.DiscardUnknown(m)
}

var xxx_messageInfo_MathAddReply proto.InternalMessageInfo

func (m *MathAddReply) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

// MathSubtractArgs are the arguments for a subtraction
type MathSubtractArgs struct {
	First                int64    `protobuf:"varint,1,opt,name=First,proto3" json:"First,omitempty"`
	Second               int64    `protobuf:"varint,2,opt,name=Second,proto3" json:"Second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MathSubtractArgs) Reset()         { *m = MathSubtractArgs{} }
func (m *MathSubtractArgs) String() string { return proto.CompactTextString(m) }
func (*MathSubtractArgs) ProtoMessage()    {}
func (*MathSubtractArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_a456687a9b7846aa, []int{2}
}

func (m *MathSubtractArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MathSubtractArgs.Unmarshal(m, b)
}
func (m *MathSubtractArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MathSubtractArgs.Marshal(b, m, deterministic)
}
func (m *MathSubtractArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MathSubtractArgs.Merge(m, src)
}
func (m *MathSubtractArgs) XXX_Size() int {
	return xxx_messageInfo_MathSubtractArgs.Size(m)
}
func (m *MathSubtractArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_MathSubtractArgs.DiscardUnknown(m)
}

var xxx_messageInfo_MathSubtractArgs proto.InternalMessageInfo

func (m *MathSubtractArgs) GetFirst() int64 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *MathSubtractArgs) GetSecond() int64 {
	if m != nil {
		return m.Second
	}
	return 0
}

// MathSubtractReply is the reply for a subtraction
type MathSubtractReply struct {
	Result               int64    `protobuf:"varint,3,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MathSubtractReply) Reset()         { *m = MathSubtractReply{} }
func (m *MathSubtractReply) String() string { return proto.CompactTextString(m) }
func (*MathSubtractReply) ProtoMessage()    {}
func (*MathSubtractReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a456687a9b7846aa, []int{3}
}

func (m *MathSubtractReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MathSubtractReply.Unmarshal(m, b)
}
func (m *MathSubtractReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MathSubtractReply.Marshal(b, m, deterministic)
}
func (m *MathSubtractReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MathSubtractReply.Merge(m, src)
}
func (m *MathSubtractReply) XXX_Size() int {
	return xxx_messageInfo_MathSubtractReply.Size(m)
}
func (m *MathSubtractReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MathSubtractReply.DiscardUnknown(m)
}

var xxx_messageInfo_MathSubtractReply proto.InternalMessageInfo

func (m *MathSubtractReply) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*MathAddArgs)(nil), "mather.MathAddArgs")
	proto.RegisterType((*MathAddReply)(nil), "mather.MathAddReply")
	proto.RegisterType((*MathSubtractArgs)(nil), "mather.MathSubtractArgs")
	proto.RegisterType((*MathSubtractReply)(nil), "mather.MathSubtractReply")
}

func init() {
	proto.RegisterFile("proto/mather.proto", fileDescriptor_a456687a9b7846aa)
}

var fileDescriptor_a456687a9b7846aa = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0x4d, 0x2c, 0xc9, 0x48, 0x2d, 0xd2, 0x03, 0x73, 0x84, 0xd8, 0x20, 0x3c, 0x25,
	0x6b, 0x2e, 0x6e, 0xdf, 0xc4, 0x92, 0x0c, 0xc7, 0x94, 0x14, 0xc7, 0xa2, 0xf4, 0x62, 0x21, 0x11,
	0x2e, 0x56, 0xb7, 0xcc, 0xa2, 0xe2, 0x12, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x08, 0x47,
	0x48, 0x8c, 0x8b, 0x2d, 0x38, 0x35, 0x39, 0x3f, 0x2f, 0x45, 0x82, 0x09, 0x2c, 0x0c, 0xe5, 0x29,
	0xa9, 0x71, 0xf1, 0x40, 0x35, 0x07, 0xa5, 0x16, 0xe4, 0x54, 0x82, 0xd4, 0x05, 0xa5, 0x16, 0x97,
	0xe6, 0x94, 0x48, 0x30, 0x43, 0xd4, 0x41, 0x78, 0x4a, 0x0e, 0x5c, 0x02, 0x20, 0x75, 0xc1, 0xa5,
	0x49, 0x25, 0x45, 0x89, 0xc9, 0x25, 0x64, 0xd8, 0xa4, 0xcd, 0x25, 0x88, 0x6c, 0x02, 0x5e, 0xeb,
	0x8c, 0x6a, 0xb9, 0x58, 0x40, 0x8a, 0x85, 0x8c, 0xb8, 0x98, 0x1d, 0x53, 0x52, 0x84, 0x84, 0xf5,
	0xa0, 0x3e, 0x47, 0xf2, 0xa8, 0x94, 0x08, 0x9a, 0x20, 0xd8, 0x44, 0x25, 0x06, 0x21, 0x47, 0x2e,
	0x0e, 0x98, 0x25, 0x42, 0x12, 0xc8, 0x6a, 0x90, 0x1d, 0x2f, 0x25, 0x89, 0x4d, 0x06, 0x6a, 0x44,
	0x12, 0x1b, 0x38, 0x84, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xae, 0x25, 0x2c, 0xa9, 0x77,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MathClient is the client API for Math service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MathClient interface {
	Add(ctx context.Context, in *MathAddArgs, opts ...grpc.CallOption) (*MathAddReply, error)
	Subtract(ctx context.Context, in *MathSubtractArgs, opts ...grpc.CallOption) (*MathSubtractReply, error)
}

type mathClient struct {
	cc grpc.ClientConnInterface
}

func NewMathClient(cc grpc.ClientConnInterface) MathClient {
	return &mathClient{cc}
}

func (c *mathClient) Add(ctx context.Context, in *MathAddArgs, opts ...grpc.CallOption) (*MathAddReply, error) {
	out := new(MathAddReply)
	err := c.cc.Invoke(ctx, "/mather.Math/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mathClient) Subtract(ctx context.Context, in *MathSubtractArgs, opts ...grpc.CallOption) (*MathSubtractReply, error) {
	out := new(MathSubtractReply)
	err := c.cc.Invoke(ctx, "/mather.Math/Subtract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MathServer is the server API for Math service.
type MathServer interface {
	Add(context.Context, *MathAddArgs) (*MathAddReply, error)
	Subtract(context.Context, *MathSubtractArgs) (*MathSubtractReply, error)
}

// UnimplementedMathServer can be embedded to have forward compatible implementations.
type UnimplementedMathServer struct {
}

func (*UnimplementedMathServer) Add(ctx context.Context, req *MathAddArgs) (*MathAddReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedMathServer) Subtract(ctx context.Context, req *MathSubtractArgs) (*MathSubtractReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subtract not implemented")
}

func RegisterMathServer(s *grpc.Server, srv MathServer) {
	s.RegisterService(&_Math_serviceDesc, srv)
}

func _Math_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MathAddArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mather.Math/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServer).Add(ctx, req.(*MathAddArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Math_Subtract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MathSubtractArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathServer).Subtract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mather.Math/Subtract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathServer).Subtract(ctx, req.(*MathSubtractArgs))
	}
	return interceptor(ctx, in, info, handler)
}

var _Math_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mather.Math",
	HandlerType: (*MathServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Math_Add_Handler,
		},
		{
			MethodName: "Subtract",
			Handler:    _Math_Subtract_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/mather.proto",
}
