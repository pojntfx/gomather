kind: pipeline
name: default

.dind: &dind
  image: docker:dind
    volumes:
      - name: dockersock
        path: /var/run

.env: &env
  DOCKER_REGISTRY:
    from_secret: docker_registry
  DOCKER_USERNAME:
    from_secret: docker_username
  DOCKER_PASSWORD:
    from_secret: docker_password

.setup: &setup # Install curl and tar
  - apk add -u curl tar
  # Install qemu-user-static
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  # Install buildx
  - curl -Lo /tmp/docker-buildx https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64
  - mkdir -p ~/.docker/cli-plugins/
  - install /tmp/docker-buildx ~/.docker/cli-plugins
  - docker buildx create --name dibs
  - docker buildx use dibs
  - docker buildx inspect --bootstrap
  # Install Helm
  - curl -L https://get.helm.sh/helm-v3.1.1-linux-amd64.tar.gz | tar -zvxf - linux-amd64/helm -O >/tmp/helm
  - install /tmp/helm /usr/local/bin
  # Install ghr
  - curl -L https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz | tar -zvxf - ghr_v0.13.0_linux_amd64/ghr
  - install ghr_v0.13.0_linux_amd64/ghr /usr/local/bin
  # Install Chart Releaser
  - curl -L https://github.com/helm/chart-releaser/releases/download/v0.2.3/chart-releaser_0.2.3_linux_amd64.tar.gz | tar -zvxf - cr
  - install cr /usr/local/bin
  # Install dibs
  - curl -Lo /tmp/dibs https://github.com/pojntfx/dibs/releases/latest/download/dibs-linux-amd64
  - install /tmp/dibs /usr/local/bin
  # Login to Docker Hub
  - docker login ${DOCKER_REGISTRY} --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}

steps:
  - name: unitTest
    <<: *dind
    environment:
      <<: *env
    commands:
      - *setup
      - dibs -help
      - docker ps -a

services:
  - name: docker
    image: docker:dind
    privileged: true
    volumes:
      - name: dockersock
        path: /var/run

volumes:
  - name: dockersock
    temp: {}
